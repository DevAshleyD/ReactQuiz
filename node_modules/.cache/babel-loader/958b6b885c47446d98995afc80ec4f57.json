{"ast":null,"code":"import _classCallCheck from\"/workspace/ReactQuiz/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/workspace/ReactQuiz/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/workspace/ReactQuiz/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/workspace/ReactQuiz/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/workspace/ReactQuiz/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import questions from'./data';import HomeScreen from'./components/HomeScreen.js';import Quiz from'./components/Quiz.js';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));_this.onNewQuiz=function(){_this.setState(function(prevState){prevState.currentView='HomeScreen';return prevState;});};_this.onQuizStart=function(numberOfQuestions){var quizQuestions=_this.state.data.slice();quizQuestions.sort(function(){return 0.5-Math.random();});quizQuestions=quizQuestions.slice(0,numberOfQuestions);_this.setState(function(prevState){prevState.currentView='Quiz';prevState.currentQuestions=quizQuestions;return prevState;});};_this.state={data:questions,currentView:'HomeScreen',currentQuestions:[]};return _this;}_createClass(App,[{key:\"render\",value:function render(){if(this.state.currentView==='HomeScreen'){return React.createElement(HomeScreen,{totalNumberOfQuestions:this.state.data.length,handleQuizStart:this.onQuizStart});}if(this.state.currentView==='Quiz'){return React.createElement(Quiz,{questions:this.state.currentQuestions,handleNewQuiz:this.onNewQuiz});}}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/workspace/ReactQuiz/src/App.js"],"names":["React","Component","questions","HomeScreen","Quiz","App","props","onNewQuiz","setState","prevState","currentView","onQuizStart","numberOfQuestions","quizQuestions","state","data","slice","sort","Math","random","currentQuestions","length"],"mappings":"ihBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,QAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,4BAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,C,GAEMC,CAAAA,G,6DACJ,aAAYC,KAAZ,CAAmB,qCACjB,qEAAMA,KAAN,GADiB,MASnBC,SATmB,CASP,UAAM,CAChB,MAAKC,QAAL,CAAc,SAACC,SAAD,CAAe,CAC3BA,SAAS,CAACC,WAAV,CAAwB,YAAxB,CACA,MAAOD,CAAAA,SAAP,CACD,CAHD,EAID,CAdkB,OAgBnBE,WAhBmB,CAgBL,SAACC,iBAAD,CAAuB,CACnC,GAAIC,CAAAA,aAAa,CAAG,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,KAAhB,EAApB,CACAH,aAAa,CAACI,IAAd,CAAmB,iBAAM,KAAMC,IAAI,CAACC,MAAL,EAAZ,EAAnB,EACAN,aAAa,CAAGA,aAAa,CAACG,KAAd,CAAoB,CAApB,CAAuBJ,iBAAvB,CAAhB,CACA,MAAKJ,QAAL,CAAc,SAACC,SAAD,CAAe,CAC3BA,SAAS,CAACC,WAAV,CAAwB,MAAxB,CACAD,SAAS,CAACW,gBAAV,CAA6BP,aAA7B,CACA,MAAOJ,CAAAA,SAAP,CACD,CAJD,EAKD,CAzBkB,CAEjB,MAAKK,KAAL,CAAa,CACXC,IAAI,CAAEb,SADK,CAEXQ,WAAW,CAAE,YAFF,CAGXU,gBAAgB,CAAE,EAHP,CAAb,CAFiB,aAOlB,C,uDAoBQ,CACP,GAAI,KAAKN,KAAL,CAAWJ,WAAX,GAA2B,YAA/B,CAA6C,CAC3C,MACE,qBAAC,UAAD,EACE,sBAAsB,CAAE,KAAKI,KAAL,CAAWC,IAAX,CAAgBM,MAD1C,CAEE,eAAe,CAAE,KAAKV,WAFxB,EADF,CAMD,CACD,GAAI,KAAKG,KAAL,CAAWJ,WAAX,GAA2B,MAA/B,CAAuC,CACrC,MACE,qBAAC,IAAD,EACE,SAAS,CAAE,KAAKI,KAAL,CAAWM,gBADxB,CAEE,aAAa,CAAE,KAAKb,SAFtB,EADF,CAMD,CACF,C,iBA7CeN,S,EAgDlB,cAAeI,CAAAA,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport questions from './data';\nimport HomeScreen from './components/HomeScreen.js'\nimport Quiz from './components/Quiz.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: questions,\n      currentView: 'HomeScreen',\n      currentQuestions: []\n    };\n  }\n\n  onNewQuiz = () => {\n    this.setState((prevState) => {\n      prevState.currentView = 'HomeScreen';\n      return prevState;\n    });\n  }\n\n  onQuizStart = (numberOfQuestions) => {\n    let quizQuestions = this.state.data.slice();\n    quizQuestions.sort(() => 0.5 - Math.random());\n    quizQuestions = quizQuestions.slice(0, numberOfQuestions);\n    this.setState((prevState) => {\n      prevState.currentView = 'Quiz';\n      prevState.currentQuestions = quizQuestions;\n      return prevState;\n    });\n  }\n\n  render() {\n    if (this.state.currentView === 'HomeScreen') {\n      return (\n        <HomeScreen\n          totalNumberOfQuestions={this.state.data.length}\n          handleQuizStart={this.onQuizStart}\n        />\n      );\n    }\n    if (this.state.currentView === 'Quiz') {\n      return (\n        <Quiz\n          questions={this.state.currentQuestions}\n          handleNewQuiz={this.onNewQuiz}\n        />\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}